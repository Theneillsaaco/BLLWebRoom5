---
export interface Props {
    text?: string;
    textGradient?: string;
    level?: 1 | 2 | 3;
    className?: string;
    animate?: boolean;
}

const {
    text = "",
    textGradient = "",
    level = 1,
    className = "",
    animate = false
} = Astro.props;

const Tag = `h${level}`;
---

<Tag class:list={[
    "font-black leading-tight tracking-tight text-black",
    level === 1 && "text-5xl md:text-7xl",
    level === 2 && "text-4xl md:text-5xl",
    level === 3 && "text-2xl md:text-3xl",
    animate && "animate-fade-in-up",
    className,
]}>
    {text && (
        <>
            {text}
            {textGradient && " "}
        </>
    )}
    {textGradient && (
        <span class:list={[`bg-gradient-to-r from-primary-400 to-secondary-500 bg-clip-text text-transparent`,
                animate && "animate-gradient-x"
        ]}>
            {textGradient}
        </span>
    )}
</Tag>

<style>
    /* Animación de entrada */
    @keyframes fade-in-up {
        0% {
            opacity: 0;
            transform: translateY(10px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
    .animate-fade-in-up {
        animation: fade-in-up 0.6s ease-out both;
    }

    /* Animación de gradiente */
    @keyframes gradient-x {
        0% {
            background-position: 0% 50%;
        }
        100% {
            background-position: 100% 50%;
        }
    }
    .animate-gradient-x {
        background-size: 200% 200%;
        animation: gradient-x 2s ease infinite alternate;
    }
</style>